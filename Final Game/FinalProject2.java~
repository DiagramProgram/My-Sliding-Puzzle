import java.awt.*;
import java.awt.event.*; 
import java.applet.*;
import javax.swing.*;

public class FinalProject2 extends Applet implements ActionListener {
  JButton [][] a = new JButton [4][4];
  char [][] pics = {{'j', 'k', 'l', 'm'}, {'n', 'o', 'p', 'q'}, {'r', 's', 't', 'u'}, {'v', 'w', '0', 'x'}};
  int moves = 0;
  Panel p;
  int x1 = 2;
  int y1 = 3;
  int useless = 0;
  
  public void init() {
    resize (600, 800);
    p = new Panel (new GridLayout (4, 4, 0, 0)); //4 rows x 4 columns
    
    for (int y = 0; y < 5; y++) {
      for (int x = 0 ; x < 5; x++) {
        a[x][y] = new JButton ("");
        a[x][y].addActionListener (this);
        a[x][y].setActionCommand (x + "" + y);
        a[x][y].setPreferredSize(new Dimension (147, 101));
        p.add (a [x][y]);
      }
    }
    enabledMethod();
    
    a[0][0].setIcon(createImageIcon("j.jpeg"));
    a[1][0].setIcon(createImageIcon("k.jpeg"));
    a[2][0].setIcon(createImageIcon("l.jpeg"));
    a[3][0].setIcon(createImageIcon("m.jpeg"));
    
    a[0][1].setIcon(createImageIcon("n.jpeg"));
    a[1][1].setIcon(createImageIcon("o.jpeg"));
    a[2][1].setIcon(createImageIcon("p.jpeg"));
    a[3][1].setIcon(createImageIcon("q.jpeg"));
    
    a[0][2].setIcon(createImageIcon("r.jpeg"));
    a[1][2].setIcon(createImageIcon("s.jpeg"));
    a[2][2].setIcon(createImageIcon("t.jpeg"));
    a[3][2].setIcon(createImageIcon("u.jpeg"));
    
    a[0][3].setIcon(createImageIcon("v.jpeg"));
    a[1][3].setIcon(createImageIcon("w.jpeg"));
    a[2][3].setIcon(createImageIcon("0.jpeg"));
    a[3][3].setIcon(createImageIcon("x.jpeg"));
    p.add (a [0][0]);
    p.add (a [1][0]);
    p.add (a [2][0]);
    p.add (a [3][0]);
    p.add (a [0][1]);
    p.add (a [1][1]);
    p.add (a [2][1]);
    p.add (a [3][1]);
    p.add (a [0][2]);
    p.add (a [1][2]);
    p.add (a [2][2]);
    p.add (a [3][2]);
    p.add (a [0][3]);
    p.add (a [1][3]);
    p.add (a [2][3]);
    p.add (a [3][3]);
    
    add (p);
  }
  
  public boolean isSolved () {
    if (pics[0][0] == 'j' && pics[0][1] == 'k' && pics[0][2] == 'l' && pics[0][3] == 'm' && pics[1][0] == 'n' && pics[1][1] == 'o' && pics[1][2] == 'p' && pics[1][3] == 'q' && pics[2][0] == 'r' && pics[2][1] == 's' && pics[2][2] == 't' && pics[2][3] == 'u' && pics[3][0] == 'v' && pics[3][1] == 'w' && pics[3][2] == 'x') {
      setBackground(Color.GREEN);
      for (int y = 0; y < 4; y++) {
        for (int x = 0 ; x < 4; x++) {
          a[x][y].setActionCommand("nothing");
        }
      }
      
      pics[3][3] = 'y'; //Fills x with proper image once image is complete
      return true;
    } else {
      setBackground(Color.RED);
      return false;
    }
  }
  
  int pos1 = -1;
  int pos2 = -1;
  public void enabledMethod() {
    for (int y = 0; y < 4; y++) {
      for (int x = 0 ; x < 4; x++) {
        a[x][y].setActionCommand("nothing");
      }
    }
    //linear search for z
    for (int y = 0; y < 4; y++) {
      for (int x = 0 ; x < 4; x++) {
        if (pics [y][x] == '0') {
          pos1 = x;
          pos2 = y;
        }
      }
    }
    a[pos1][pos2].setActionCommand(pos1 + "" + pos2);
    if (pos1+1 < 4)
      a[pos1+1][pos2].setActionCommand((pos1+1) + "" + pos2);
    if (pos2+1 < 4)
      a[pos1][pos2+1].setActionCommand(pos1 + "" + (pos2+1));
    if (pos1-1 > -1)
      a[pos1-1][pos2].setActionCommand((pos1-1) + "" + pos2);
    if (pos2-1 > -1)
      a[pos1][pos2-1].setActionCommand(pos1 + "" + (pos2-1));
    
    isSolved();
  }
  
  public void actionPerformed (ActionEvent e) {
    if (e.getActionCommand().equals("nothing")) {
      useless++;
    } else if (e.getActionCommand().equals((pos1-1) + "" + pos2) || e.getActionCommand().equals(pos1 + "" + (pos2-1)) || e.getActionCommand().equals((pos1+1) + "" + pos2) || e.getActionCommand().equals(pos1 + "" + (pos2+1))) {
      moves++;
      String pos = (e.getActionCommand());
      int i = (int) (pos.charAt(0)-48);
      int j = (int) (pos.charAt(1)-48);
      pics[y1][x1] = pics[j][i];
      pics[j][i] = '0';
      enabledMethod();
      a[x1][y1].setIcon(createImageIcon(pics[y1][x1] + ".jpeg"));
      a[i][j].setIcon(createImageIcon(pics[j][i] + ".jpeg"));
      
      x1 = i;
      y1 = j;
    }
  }
  
  public static ImageIcon createImageIcon (String path) {
    java.net.URL imgURL = FinalProject.class.getResource (path);
    if (imgURL != null)
      return new ImageIcon (imgURL);
    else {
      System.err.println("Couldn't find file: " + path);
      return null;
    }
  }
}